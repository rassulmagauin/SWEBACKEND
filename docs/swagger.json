{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This API serves as a backend for Vehicle Management System",
        "title": "Vehicle Management System API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/auction": {
            "get": {
                "description": "Get all auctions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auction"
                ],
                "summary": "Get all auctions",
                "responses": {
                    "200": {
                        "description": "Successful response with auction details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.AuctionVehicleResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Admins can create auctions with vehicle details and images",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auction"
                ],
                "summary": "Create an auction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Vehicle ID",
                        "name": "vehicle_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Details of the auction",
                        "name": "details",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Images for the auction",
                        "name": "images",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with auction details",
                        "schema": {
                            "$ref": "#/definitions/api.AuctionVehicleResponse"
                        }
                    }
                }
            }
        },
        "/auction/{id}": {
            "get": {
                "description": "Get an auction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auction"
                ],
                "summary": "Get an auction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Auction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with auction details",
                        "schema": {
                            "$ref": "#/definitions/api.AuctionVehicleResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an auction",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auction"
                ],
                "summary": "Delete an auction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Auction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/fueling": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all fueling records",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fueling"
                ],
                "summary": "Get all fueling records",
                "responses": {
                    "200": {
                        "description": "Successful response with fueling record details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.FuelingRecordResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request with error message",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Admins and fueling personnel can create fueling records",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fueling"
                ],
                "summary": "Create fueling record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Vehicle ID",
                        "name": "vehicle_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Fueling Person ID",
                        "name": "fueling_person_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Amount of fuel",
                        "name": "amount",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Total cost of fueling",
                        "name": "total_cost",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gas Station",
                        "name": "gas_station",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Additional notes",
                        "name": "notes",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Image before fueling",
                        "name": "before_fueling_image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image after fueling",
                        "name": "after_fueling_image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with fueling record details",
                        "schema": {
                            "$ref": "#/definitions/api.FuelingRecordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request with error message",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error with error message",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fueling/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a fueling record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fueling"
                ],
                "summary": "Get a fueling record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fueling Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with fueling record details",
                        "schema": {
                            "$ref": "#/definitions/api.FuelingRecordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request with error message",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found with error message",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a fueling record",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fueling"
                ],
                "summary": "Delete a fueling record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fueling Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request with error message",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found with error message",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Logs user in",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.loginResponse"
                        }
                    }
                }
            }
        },
        "/maintenance": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all maintenance records if user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "maintenance"
                ],
                "summary": "Get all maintenance records of particular user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.createMaintenanceRecordResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a maintenance record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "maintenance"
                ],
                "summary": "Create a maintenance record",
                "parameters": [
                    {
                        "description": "Maintenance",
                        "name": "maintenance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createMaintenanceRecordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createMaintenanceRecordResponse"
                        }
                    }
                }
            }
        },
        "/maintenance/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a maintenance record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "maintenance"
                ],
                "summary": "Get a maintenance record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Maintenance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createMaintenanceRecordResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a maintenance record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "maintenance"
                ],
                "summary": "Update a maintenance record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Maintenance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Maintenance",
                        "name": "maintenance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createMaintenanceRecordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createMaintenanceRecordResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a maintenance record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "maintenance"
                ],
                "summary": "Delete a maintenance record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Maintenance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createMaintenanceRecordResponse"
                        }
                    }
                }
            }
        },
        "/report/{vehicle_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a report",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Get a report",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Vehicle ID",
                        "name": "vehicle_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ReportForSwagger"
                        }
                    }
                }
            }
        },
        "/task": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all tasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Get all tasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.createTaskResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Create a task",
                "parameters": [
                    {
                        "description": "Task",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createTaskResponse"
                        }
                    }
                }
            }
        },
        "/task/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Get a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createTaskResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Update a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createTaskResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Delete a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createTaskResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets all users from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.getUserResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates and saves user to database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.userResponse"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets user from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.getUserResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates user in database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.userResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes user from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.deleteUserResponse"
                        }
                    }
                }
            }
        },
        "/vehicle": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all vehicles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Get all vehicles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.createVehicleResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a vehicle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Create a vehicle",
                "parameters": [
                    {
                        "description": "Vehicle",
                        "name": "vehicle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createVehicleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createVehicleResponse"
                        }
                    }
                }
            }
        },
        "/vehicle/assign": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Assign a vehicle to a driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Assign a vehicle to a driver",
                "parameters": [
                    {
                        "description": "Vehicle",
                        "name": "vehicle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.assignVehicleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.userResponse"
                            }
                        }
                    }
                }
            }
        },
        "/vehicle/register": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a vehicle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Register a vehicle",
                "parameters": [
                    {
                        "description": "Vehicle",
                        "name": "vehicle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.registerVehicleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createVehicleResponse"
                        }
                    }
                }
            }
        },
        "/vehicle/unassign": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Unassign a vehicle from a driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Unassign a vehicle from a driver",
                "parameters": [
                    {
                        "description": "Vehicle",
                        "name": "vehicle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.assignVehicleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.userResponse"
                            }
                        }
                    }
                }
            }
        },
        "/vehicle/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a vehicle",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Get a vehicle",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Vehicle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createVehicleResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a vehicle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Update a vehicle",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Vehicle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Vehicle",
                        "name": "vehicle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createVehicleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.createVehicleResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Changes status of pending vehicles to Active",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Activate pending vehicle",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Vehicle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.createVehicleResponse"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a vehicle",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Delete a vehicle",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Vehicle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AuctionVehicleResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ImageResponse"
                    }
                },
                "vehicle_id": {
                    "type": "integer"
                }
            }
        },
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "api.FuelingRecordResponse": {
            "type": "object",
            "properties": {
                "after_fueling_image": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "before_fueling_image": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "fueling_person_id": {
                    "type": "integer"
                },
                "gas_station": {
                    "description": "omitempty if the field is optional",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "notes": {
                    "description": "omitempty if the field is optional",
                    "type": "string"
                },
                "total_cost": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "vehicle_id": {
                    "type": "integer"
                }
            }
        },
        "api.ImageResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "api.ReportForSwagger": {
            "type": "object",
            "properties": {
                "fueling_records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.myFuelingRecord"
                    }
                },
                "maintenance_records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.myMaintenanceRecord"
                    }
                },
                "vehicle": {
                    "$ref": "#/definitions/api.createVehicleResponse"
                }
            }
        },
        "api.assignVehicleRequest": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "vehicle_id": {
                    "type": "integer"
                }
            }
        },
        "api.createMaintenanceRecordRequest": {
            "type": "object",
            "properties": {
                "maintenance_date": {
                    "type": "string"
                },
                "maintenance_person_id": {
                    "type": "integer"
                },
                "mileage_at_service": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "service_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total_cost": {
                    "type": "number"
                },
                "vehicle_id": {
                    "type": "integer"
                }
            }
        },
        "api.createMaintenanceRecordResponse": {
            "type": "object",
            "properties": {
                "maintenance_date": {
                    "type": "string"
                },
                "maintenance_person_id": {
                    "type": "integer"
                },
                "mileage_at_service": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "service_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total_cost": {
                    "type": "number"
                },
                "vehicle_id": {
                    "type": "integer"
                }
            }
        },
        "api.createTaskRequest": {
            "type": "object",
            "properties": {
                "driver_id": {
                    "type": "integer"
                },
                "end_latitude": {
                    "type": "number"
                },
                "end_longitude": {
                    "type": "number"
                },
                "end_time": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "start_latitude": {
                    "type": "number"
                },
                "start_longitude": {
                    "type": "number"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.createTaskResponse": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "driver_id": {
                    "type": "integer"
                },
                "end_latitude": {
                    "type": "number"
                },
                "end_longitude": {
                    "type": "number"
                },
                "end_time": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "start_latitude": {
                    "type": "number"
                },
                "start_longitude": {
                    "type": "number"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.createUserRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "driving_license_number": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "goverment_id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.createVehicleRequest": {
            "type": "object",
            "properties": {
                "assigned_driver": {
                    "type": "integer"
                },
                "car_model": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "current_mileage": {
                    "type": "integer"
                },
                "last_maintenance": {
                    "type": "string"
                },
                "license_plate": {
                    "type": "string"
                },
                "make": {
                    "type": "string"
                },
                "next_maintenance": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "sitting_capacity": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vin": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "api.createVehicleResponse": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "assigned_driver": {
                    "type": "integer"
                },
                "car_model": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "current_mileage": {
                    "type": "integer"
                },
                "last_maintenance": {
                    "type": "string"
                },
                "license_plate": {
                    "type": "string"
                },
                "make": {
                    "type": "string"
                },
                "next_maintenance": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "sitting_capacity": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vin": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "api.deleteUserResponse": {
            "type": "object"
        },
        "api.getUserResponse": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "driving_license_number": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "goverment_id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.loginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.loginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/api.userResponse"
                }
            }
        },
        "api.myFuelingRecord": {
            "type": "object",
            "properties": {
                "after_fueling_image": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "before_fueling_image": {
                    "type": "string"
                },
                "fueling_person_id": {
                    "type": "integer"
                },
                "gas_station": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "total_cost": {
                    "type": "number"
                },
                "vehicle_id": {
                    "type": "integer"
                }
            }
        },
        "api.myMaintenanceRecord": {
            "type": "object",
            "properties": {
                "maintenance_date": {
                    "type": "string"
                },
                "maintenance_person_id": {
                    "type": "integer"
                },
                "mileage_at_service": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "service_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total_cost": {
                    "description": "Parts               []Part             `gorm:\"foreignKey:ID\" json:\"parts\"`",
                    "type": "number"
                },
                "vehicle_id": {
                    "type": "integer"
                }
            }
        },
        "api.registerVehicleRequest": {
            "type": "object",
            "properties": {
                "assigned_driver": {
                    "type": "integer"
                },
                "car_model": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "current_mileage": {
                    "type": "integer"
                },
                "last_maintenance": {
                    "type": "string"
                },
                "license_plate": {
                    "type": "string"
                },
                "make": {
                    "type": "string"
                },
                "next_maintenance": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "sitting_capacity": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "vin": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "api.userResponse": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "driving_license_number": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "goverment_id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}